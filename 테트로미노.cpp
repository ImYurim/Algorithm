//백준 14500번

//답 잘 나오는데 제출 오류, tetro 배열 숫자 알맞게 적음.
// #include <iostream>
// #include <cmath>
// using namespace std;

// int N;
// int M;
// int map[501][501];
// int temp;
// int ans;
// int tetro[19][4][2]={
//     {{0,0},{0,1},{0,2},{0,3}},
//     {{0,0},{1,0},{2,0},{3,0}},
    
//     {{0,0},{0,1},{1,0},{1,1}},
    
//     {{0,0},{1,0},{2,0},{2,1}},
//     {{0,0},{0,1},{0,2},{1,0}},
//     {{0,0},{0,1},{1,1},{1,2}},
//     {{1,0},{1,1},{1,2},{0,2}},
//     {{2,0},{0,1},{1,1},{2,1}},
//     {{0,0},{0,1},{0,2},{1,2}},
//     {{0,0},{0,1},{1,0},{2,0}},
//     {{0,0},{1,0},{1,1},{1,2}},
    
//     {{0,0},{1,0},{1,1},{2,1}},
//     {{1,0},{1,1},{0,1},{0,2}},
//     {{1,0},{2,0},{1,1},{0,1}},
//     {{0,0},{0,1},{1,1},{1,2}},
    
//     {{0,0},{0,1},{0,2},{1,1}},
//     {{1,0},{0,1},{1,1},{2,1}},
//     {{0,1},{1,0},{1,1},{1,2}},
//     {{0,0},{1,0},{2,0},{1,1}},
// };
// int nx,ny;

// int main(){
//     ans=0;
//     scanf("%d",&N);
//     scanf("%d",&M);
//     for(int i = 0; i<N; i++){
//         for(int j = 0; j<M; j++){
//             scanf("%d",&map[i][j]);
//         }
//     }
//     for(int k=0; k<19; k++){
//         for(int i=0; i<N; i++){
//             for(int j=0; j<M; j++){
//                 temp=0;
//                 for(int l=0; l<4; l++){
//                     nx = i+tetro[k][l][0];
//                     ny = j+tetro[k][l][1];
//                     if(nx>=N||ny>=M){
//                         temp=0;
//                         break;
//                     }
//                     temp+=map[nx][ny];
//                 }
//                 ans=max(ans,temp);
//             }
//         }
//     }
//     printf("%d",ans);

// }


#include <iostream>
#include <cmath>
using namespace std;

int N;
int M;
int map[501][501];
int temp;
int ans;
int tetro[19][4][2]={
    {{0, 0}, {0, 1}, {0, 2}, {0, 3}},
    {{0, 0}, {1, 0}, {2, 0}, {3, 0}},

    {{0, 0}, {0, 1}, {1, 0}, {1, 1}},

    {{0, 0}, {1, 0}, {2, 0}, {2, 1}},
    {{0, 0}, {0, 1}, {0, 2}, {-1, 2}},
    {{0, 0}, {0, 1}, {1, 1}, {2, 1}},
    {{0, 0}, {1, 0}, {0, 1}, {0, 2}},

    {{0, 0}, {1, 0}, {2, 0}, {2, -1}},
    {{0, 0}, {1, 0}, {1, 1}, {1, 2}},
    {{0, 0}, {1, 0}, {2, 0}, {0, 1}},
    {{0, 0}, {0, 1}, {0, 2}, {1, 2}},

    {{0, 0}, {1, 0}, {1, 1}, {2, 1}},
    {{0, 0}, {0, 1}, {-1, 1}, {-1, 2}},

    {{0, 0}, {1, 0}, {0, 1}, {-1, 1}},
    {{0, 0}, {0, 1}, {1, 1}, {1, 2}},

    {{0, 0}, {0, 1}, {0, 2}, {1, 1}},
    {{0, 0}, {0, 1}, {1, 1}, {-1, 1}},
    {{0, 0}, {0, 1}, {0, 2}, {-1, 1}},
    {{0, 0}, {1, 0}, {2, 0}, {1, 1}},
};
int nx,ny;

int main(){
    ans=0;
    scanf("%d",&N);
    scanf("%d",&M);
    for(int i = 0; i<N; i++){
        for(int j = 0; j<M; j++){
            scanf("%d",&map[i][j]);
        }
    }
    for(int k=0; k<19; k++){
        for(int i=0; i<N; i++){
            for(int j=0; j<M; j++){
                temp=0;
                for(int l=0; l<4; l++){
                    nx = i+tetro[k][l][0];
                    ny = j+tetro[k][l][1];
                    if(nx>=N||ny>=M||ny<0||nx<0){
                        temp=0;
                        break;
                    }
                    temp+=map[nx][ny];
                }
                ans=max(ans,temp);
            }
        }
    }
    printf("%d",ans);

}

